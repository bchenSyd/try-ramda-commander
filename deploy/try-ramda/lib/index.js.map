{"version":3,"sources":["../../../src/index.js"],"names":["data","result","interfaceVersion","requested","lastUpdated","tasks","id","complete","priority","dueDate","username","title","created","serverRequest","Promise","res","rej","setTimeout","clientCode","userName","then","prop","filter","propEq","reject","map","pick","sortBy","console","log","start"],"mappings":";;;;;;;AAAA;;;;;;AAEA,IAAMA,OAAO;AACTC,YAAQ,SADC;AAETC,sBAAkB,OAFT;AAGTC,eAAW,qBAHF;AAITC,iBAAa,qBAJJ;AAKTC,WAAO,CACH;AACIC,YAAI,GADR,EACaC,UAAU,KADvB,EAC8BC,UAAU,MADxC;AAEIC,iBAAS,YAFb,EAE2BC,UAAU,OAFrC;AAGIC,eAAO,cAHX,EAG2BC,SAAS;AAHpC,KADG,EAMH;AACIN,YAAI,GADR,EACaC,UAAU,KADvB,EAC8BC,UAAU,QADxC;AAEIC,iBAAS,YAFb,EAE2BC,UAAU,MAFrC;AAGIC,eAAO,mBAHX,EAGgCC,SAAS;AAHzC,KANG,EAWH;AACIN,YAAI,GADR,EACaC,UAAU,IADvB,EAC6BC,UAAU,MADvC;AAEIC,iBAAS,YAFb,EAE2BC,UAAU,MAFrC;AAGIC,eAAO,aAHX,EAG0BC,SAAS;AAHnC,KAXG,EAgBH;AACIN,YAAI,GADR,EACaC,UAAU,KADvB,EAC8BC,UAAU,KADxC;AAEIC,iBAAS,YAFb,EAE2BC,UAAU,MAFrC;AAGIC,eAAO,gBAHX,EAG6BC,SAAS;AAHtC,KAhBG,EAqBH;AACIN,YAAI,GADR,EACaC,UAAU,KADvB,EAC8BC,UAAU,QADxC;AAEIC,iBAAS,YAFb,EAE2BC,UAAU,OAFrC;AAGIC,eAAO,mBAHX,EAGgCC,SAAS;AAHzC,KArBG,EA0BH;AACIN,YAAI,GADR,EACaC,UAAU,IADvB,EAC6BC,UAAU,MADvC;AAEIC,iBAAS,YAFb,EAE2BC,UAAU,MAFrC;AAGIC,eAAO,kBAHX,EAG+BC,SAAS;AAHxC,KA1BG,EA+BH;AACIN,YAAI,GADR,EACaC,UAAU,IADvB,EAC6BC,UAAU,MADvC;AAEIC,iBAAS,YAFb,EAE2BC,UAAU,MAFrC;AAGIC,eAAO,kBAHX,EAG+BC,SAAS;AAExC;AALA,KA/BG;AALE,CAAb;AA4CA,SAASC,aAAT,GAAyB;AACrB,WAAO,IAAIC,OAAJ,CAAY,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BC,mBAAW,YAAM;AACbF,gBAAIf,IAAJ;AACH,SAFD,EAEG,IAFH;AAGH,KAJM,CAAP;AAKH;;AAED,SAASkB,UAAT,CAAoBC,QAApB,EAA8B;AAC1B,WAAON,gBACFO,IADE,CACG,gBAAEC,IAAF,CAAO,OAAP,CADH,EAEFD,IAFE,CAEG,gBAAEE,MAAF,CAAS,gBAAEC,MAAF,CAAS,UAAT,EAAqBJ,QAArB,CAAT,CAFH,EAGFC,IAHE,CAGG,gBAAEI,MAAF,CAAS,gBAAED,MAAF,CAAS,UAAT,EAAqB,IAArB,CAAT,CAHH,EAIFH,IAJE,CAIG,gBAAEK,GAAF,CAAM,gBAAEC,IAAF,CAAO,CAAC,IAAD,EAAO,SAAP,EAAkB,OAAlB,EAA2B,UAA3B,CAAP,CAAN,CAJH,EAKFN,IALE,CAKG,gBAAEO,MAAF,CAAS,gBAAEN,IAAF,CAAO,SAAP,CAAT,CALH,CAAP;AAOH;;AAEDH,WAAW,MAAX,EACKE,IADL,CACU,kBAAU;AACZQ,YAAQC,GAAR,CAAY5B,MAAZ;AACH,CAHL;;AAKO,IAAM6B,wBAAM,SAANA,KAAM,GAAI;AACnBZ,eAAW,MAAX,EACCE,IADD,CACM,kBAAU;AACZQ,gBAAQC,GAAR,CAAY5B,MAAZ;AACH,KAHD;AAIH,CALM","file":"index.js","sourcesContent":["import R from 'ramda';\n\nconst data = {\n    result: \"SUCCESS\",\n    interfaceVersion: \"1.0.3\",\n    requested: \"10/17/2013 15:31:20\",\n    lastUpdated: \"10/16/2013 10:52:39\",\n    tasks: [\n        {\n            id: 104, complete: false, priority: \"high\",\n            dueDate: \"2013-11-29\", username: \"Scott\",\n            title: \"Do something\", created: \"9/22/2013\"\n        },\n        {\n            id: 105, complete: false, priority: \"medium\",\n            dueDate: \"2013-11-22\", username: \"Lena\",\n            title: \"Do something else\", created: \"9/22/2013\"\n        },\n        {\n            id: 107, complete: true, priority: \"high\",\n            dueDate: \"2013-11-22\", username: \"Mike\",\n            title: \"Fix the foo\", created: \"9/22/2013\"\n        },\n        {\n            id: 108, complete: false, priority: \"low\",\n            dueDate: \"2013-11-15\", username: \"Lena\",\n            title: \"Adjust the bar\", created: \"9/25/2013\"\n        },\n        {\n            id: 110, complete: false, priority: \"medium\",\n            dueDate: \"2013-11-15\", username: \"Scott\",\n            title: \"Rename everything\", created: \"10/2/2013\"\n        },\n        {\n            id: 112, complete: true, priority: \"high\",\n            dueDate: \"2013-11-27\", username: \"Lena\",\n            title: \"Alter all quuxes\", created: \"10/5/2013\"\n        },\n        {\n            id: 113, complete: true, priority: \"high\",\n            dueDate: \"2013-11-27\", username: \"Lena\",\n            title: \"Alter all quuxes\", created: \"10/5/2013\"\n        }\n        // , ...\n    ]\n};\nfunction serverRequest() {\n    return new Promise((res, rej) => {\n        setTimeout(() => {\n            res(data);\n        }, 1000);\n    })\n}\n\nfunction clientCode(userName) {\n    return serverRequest()\n        .then(R.prop('tasks'))\n        .then(R.filter(R.propEq('username', userName)))\n        .then(R.reject(R.propEq('complete', true)))\n        .then(R.map(R.pick(['id', 'dueDate', 'title', 'priority'])))\n        .then(R.sortBy(R.prop('dueDate')));\n\n}\n\nclientCode('Lena')\n    .then(result => {\n        console.log(result)\n    });\n\nexport const start=()=>{\n    clientCode('Lena')\n    .then(result => {\n        console.log(result)\n    });\n}"]}